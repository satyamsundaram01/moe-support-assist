# =============================================================================
# MoEngage Support Agent - Environment Configuration
# =============================================================================
# 
# This file contains all environment variables used by the MoEngage Support Agent.
# Copy this file to .env and fill in your values.
#
# Usage:
# 1. Copy this file: cp env.example .env
# 2. Edit .env with your actual values
# 3. Run the server: python main.py
#
# =============================================================================

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
# Environment type (local/production)
ENVIRONMENT=local

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server host (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOST=0.0.0.0

# Server port
PORT=8000

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Whether to serve the web interface (true/false)
SERVE_WEB_INTERFACE=false

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Comma-separated list of allowed origins for CORS
# Use * to allow all origins (not recommended for production)
ALLOWED_ORIGINS=*

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database Configuration
# 
# Option 1: Full connection string (recommended)
DATABASE_URL=postgresql://username:password@host:port/database

# Option 2: Individual database components (alternative)
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=adkdb
# DB_USER=postgres
# DB_PASSWORD=your_password

# =============================================================================
# MCP (MODEL CONTEXT PROTOCOL) CONFIGURATION
# =============================================================================
# MCP Server Configuration
# 
# For local development
MCP_LOCAL_ENDPOINT=http://localhost:8080

# For production
# MCP_ENDPOINT=https://your-mcp-server.com

# MCP SSE (Server-Sent Events) Configuration
MCP_SSE_URL=http://127.0.0.1:8080/sse
MCP_SSE_TIMEOUT=200

# =============================================================================
# LLM MODEL CONFIGURATION
# =============================================================================
# Configure different models for different agent types
# All models default to gemini-2.5-flash-preview-05-20 if not specified

# Default model for all agents
LLM_MODEL_DEFAULT=gemini-2.5-flash-preview-05-20

# Technical troubleshooting agent
LLM_MODEL_TECHNICAL=gemini-2.5-flash-preview-05-20

# Push notification specialist agent
LLM_MODEL_PUSH=gemini-2.5-flash-preview-05-20

# WhatsApp specialist agent
LLM_MODEL_WHATSAPP=gemini-2.5-flash-preview-05-20

# Knowledge base specialist agent
LLM_MODEL_KNOWLEDGE=gemini-2.5-flash-preview-05-20

# Follow-up specialist agent
LLM_MODEL_FOLLOWUP=gemini-2.5-flash-preview-05-20

# Ticket analysis specialist agent
LLM_MODEL_TICKET=gemini-2.5-flash-preview-05-20

# Execution specialist agent
LLM_MODEL_EXECUTION=gemini-2.5-flash-preview-05-20

# Root conversation manager agent
LLM_MODEL_ROOT=gemini-2.5-flash-preview-05-20

# =============================================================================
# GOOGLE DISCOVERY ENGINE CONFIGURATION
# =============================================================================
# Google Cloud Project and Discovery Engine settings

# Google Cloud Project ID
DISCOVERY_ENGINE_PROJECT_ID=agent-ai-initiatives

# Discovery Engine location (us, eu, asia, etc.)
DISCOVERY_ENGINE_LOCATION=us

# Discovery Engine ID
DISCOVERY_ENGINE_ID=app-moe-support-agent-tech_1752497866942

# Discovery Engine Datastores
# Confluence runbooks datastore
DISCOVERY_ENGINE_CONFLUENCE_DATASTORE=moe-confluence-support-runbooks-live-p_1752497946721_page

# Zendesk tickets datastore
DISCOVERY_ENGINE_ZENDESK_DATASTORE=moe-gs-zendesk-live-private_2599941188_gcs_store

# Help documentation datastore
DISCOVERY_ENGINE_HELP_DOCS_DATASTORE=moe-gs-public-docs-live-public_2599761524_gcs_store

# =============================================================================
# GOOGLE SERVICE ACCOUNT CREDENTIALS
# =============================================================================
# Google Cloud Service Account credentials for Discovery Engine access
# 
# Choose ONE of the following methods:

# Method 1: Base64 encoded service account JSON (recommended for production)
# GOOGLE_SERVICE_ACCOUNT_BASE64=base64_encoded_service_account_json

# Method 2: Individual environment variables
GOOGLE_PROJECT_ID=agent-ai-initiatives
GOOGLE_PRIVATE_KEY_ID=your_private_key_id
GOOGLE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour private key here\n-----END PRIVATE KEY-----\n"
GOOGLE_CLIENT_EMAIL=discovery-engine-aws-app@agent-ai-initiatives.iam.gserviceaccount.com
GOOGLE_CLIENT_ID=your_client_id
GOOGLE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/discovery-engine-aws-app%40agent-ai-initiatives.iam.gserviceaccount.com

# Method 3: Local credentials file path (for development)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. For local development:
#    - Set ENVIRONMENT=local
#    - Use localhost URLs for MCP endpoints
#    - Use local PostgreSQL or Docker Compose
#
# 2. For production:
#    - Set ENVIRONMENT=production
#    - Use production URLs for MCP endpoints
#    - Use production PostgreSQL database
#    - Ensure all required credentials are set
#
# 3. Security:
#    - Never commit .env files to version control
#    - Use environment variables or secrets management in production
#    - Rotate credentials regularly
#
# 4. Database:
#    - Only PostgreSQL is supported
#    - Ensure database is running before starting the server
#    - Run migrations: python migrations/migrate.py run
#
# ============================================================================= 